<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Results - NodeJS with Database</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/database/database.css">      
</head>

<body>

    <header>
        <h1>Database</h1>        
    </header>

    <table>
        <tr>
            <th>Name</th><th>City</th><th>Color</th><th></th>         
        </tr>
        <%
        results.forEach(row => { 
        %>

        <tr>
            <td><%= row.name %></td>
            <td><%= row.city %></td>
            <td style="background-color:<%= row.color %>"></td>
            <td><button class="x" id=<%= row.id %>>X</button></td>
        </tr>
        <%
        });
        %>
    </table>

    <div id="confirm">
        <button id="delete">DELETE</button> 
        <button id="cancel">CANCEL</button>
    </div>

    <script>

        // an html collection of all the delete buttons
        const buttons = document.getElementsByClassName("x"); 

        // add an event to each delete button
        let currentX;
        for (tag of buttons) {
            tag.addEventListener("click", e=>{
                confirm.style.display = "block";
                currentX = e.target; 
            });
        }

        // confirmation pane
        const confirm = document.getElementById("confirm");
        const deleteBut = document.getElementById("delete");
        const cancelBut = document.getElementById("cancel");

        // the delete button on the confirm pane
        deleteBut.addEventListener("click", ()=>{

            // send the delete request to the server
            fetch("/database/delete", {
                method:"POST",
                headers: {"Content-Type": "application/json"},
                body: JSON.stringify({id:currentX.id})
            }).then(response=>{
                return response.json();
            }).then(data=>{
                if (data.error == "none") {
                    // hide the x button's tr tag
                    currentX.parentElement.parentElement.style.display = "none";
                    confirm.style.display = "none";
                } else {                   
                    showError();
                }               
            }).catch(showError);
            function showError() {
                deleteBut.innerText = "ERROR";
                setTimeout(()=>{deleteBut.innerText = "DELETE"}, 1500);
            }
            
        });

        // the cancel button on the confirm pane
        cancelBut.addEventListener("click", ()=>{
            confirm.style.display = "none";
        });

    </script>


</body>

</html>