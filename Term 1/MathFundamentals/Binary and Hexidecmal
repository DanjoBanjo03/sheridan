How to convert
*Right to left

Decimal to Binary
Divide by 2, if there is a remainder set it to 1 if no remainder set to 0. Divide to the closest number. Finish once you hit 1.

Decimal to Hexadecimal
Long divide by 16 until the remainder is less than 16
Divide the number 16, remove decimal, multiply the answer by 16 and subtract from the original number

Binary to Decimal
Right to left multiply by 2^x starting at 0 and going up and add them up (0x2^0 + 1x2^1)

Hexadecimal to Decimal
Right to left multiply by 16^x starting at 0 and going up and add them up (0x16^0 + 1x16^1)

Binary to Hexadecimal
Right to left split into groups of 4 and find which corisponding binary number is that group including A - F

Hexadecimal to Binary
Find the Binary digits the corespond to the number/ letter 

------------------------------------------------------------------------------------------

Finding the number in binary trick

2^0 2^1 2^2 2^3 2^4

1  2  4  8   16  32  64  128 

0  1  1  1           14                   
1  0  1  1           13

A= 10
B= 11
C= 12
D= 13
E= 14
F= 15

------------------------------------------------------------------------------------------

Adding

Binary
Add 1+1 = 0 carry the 1
If equals 3 then put 1 and carry the 1

Hexadecimal
Add the column, if it is larger than 16 subtract 16 from it and carry the one


Subtracting

Hexadecimal
Subtract the column, if top number is too low borrow from the left, remember you are borrowing 16

Binary (Using 2's complement)

Keep the bit lengths of both minimend and the subtrahend the same
Find the 2's Complement of the negative number (Subtrahend)
Add the minimend and the 2's complement and discard the extra bit from the left (if there is any)

------------------------------------------------------------------------------------------

Complements

Ten's complement = 9's complement + 1
9's complement = Ten's complement - 1
2's complement - 1's complement + 1
1's complement - 2's complement - 1
16's complement = 15's complement + 1
15's complement = 16 complement -1

-8 to 7 = 4 bits
-16 to 15 5 bits
-32 to 31 6 bits
-64 to 63 7 bits 
-128 to 127 8 bits

10's Complement
(10^n)-N
n: # of digits in the given number
N: The given number

2^n - N
2's Complement = 1's complement + 1 << Easier Method
To find: Flip every bit in the number (10101 --> 01010)